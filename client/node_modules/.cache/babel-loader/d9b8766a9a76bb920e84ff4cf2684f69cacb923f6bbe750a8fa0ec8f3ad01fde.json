{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joshu\\\\OneDrive\\\\Desktop\\\\movie-recommend\\\\client\\\\src\\\\components\\\\Recommend.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport { jwtDecode } from 'jwt-decode';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Recommend = () => {\n  _s();\n  const [recommendations, setRecommendations] = useState([]);\n  const [genres, setGenres] = useState([]);\n  const [selectedGenre, setSelectedGenre] = useState('All');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [apiKey, setApiKey] = useState(null);\n  const [hasRecommendations, setHasRecommendations] = useState(false);\n  const token = localStorage.getItem('token');\n  const userId = token ? jwtDecode(token).id : null;\n  useEffect(() => {\n    const fetchApiKey = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api-key');\n        setApiKey(response.data.api_key);\n      } catch (error) {\n        setError('Failed to fetch API key');\n      }\n    };\n    fetchApiKey();\n  }, []);\n  useEffect(() => {\n    if (!apiKey) return;\n    const fetchGenres = async () => {\n      try {\n        const response = await axios.get('https://api.themoviedb.org/3/genre/movie/list', {\n          params: {\n            api_key: apiKey,\n            language: 'en-US'\n          }\n        });\n        setGenres(response.data.genres);\n      } catch (error) {\n        setError('Failed to fetch genres');\n      }\n    };\n    fetchGenres();\n  }, [apiKey]);\n  const shuffleArray = array => {\n    const arrayCopy = [...array];\n    for (let i = arrayCopy.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [arrayCopy[i], arrayCopy[j]] = [arrayCopy[j], arrayCopy[i]];\n    }\n    return arrayCopy;\n  };\n  const fetchRecommendations = useCallback(async () => {\n    if (!userId) {\n      setError('User not logged in');\n      return;\n    }\n    if (!apiKey) {\n      setError('API key not available');\n      return;\n    }\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await axios.get('http://localhost:5000/recommendations', {\n        params: {\n          user_id: userId\n        }\n      });\n      if (response.data.length === 0) {\n        setHasRecommendations(false);\n        setRecommendations([]);\n        return;\n      }\n      setHasRecommendations(true);\n      let filteredRecommendations = response.data;\n      if (selectedGenre !== 'All') {\n        filteredRecommendations = filteredRecommendations.filter(rec => rec.genre_names && rec.genre_names.includes(selectedGenre));\n      }\n      const randomizedRecommendations = shuffleArray(filteredRecommendations);\n      setRecommendations(randomizedRecommendations);\n    } catch (error) {\n      setError('Error fetching recommendations');\n    } finally {\n      setLoading(false);\n    }\n  }, [userId, apiKey, selectedGenre]);\n\n  // Format the release date to show only the year\n  const formatReleaseYear = dateString => {\n    if (!dateString) return '';\n    return new Date(dateString).getFullYear();\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"recommend-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"section-title\",\n      children: \"Movie Recommendations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"genre-selection\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"genre-filter\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"genre-select\",\n          children: \"Filter by genre:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"genre-select\",\n          onChange: e => setSelectedGenre(e.target.value),\n          value: selectedGenre,\n          disabled: loading,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"All\",\n            children: \"All Genres\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), genres.map(genre => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: genre.name,\n            children: genre.name\n          }, genre.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchRecommendations,\n        disabled: loading,\n        className: \"recommend-button\",\n        children: loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"loading-spinner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            width: \"16\",\n            height: \"16\",\n            viewBox: \"0 0 24 24\",\n            fill: \"none\",\n            stroke: \"currentColor\",\n            strokeWidth: \"2\",\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n              cx: \"12\",\n              cy: \"12\",\n              r: \"10\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"polygon\", {\n              points: \"10 8 16 12 10 16 10 8\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this), \"Get Recommendations\"]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        width: \"16\",\n        height: \"16\",\n        viewBox: \"0 0 24 24\",\n        fill: \"none\",\n        stroke: \"currentColor\",\n        strokeWidth: \"2\",\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: \"12\",\n          cy: \"12\",\n          r: \"10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n          x1: \"12\",\n          y1: \"8\",\n          x2: \"12\",\n          y2: \"12\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n          x1: \"12\",\n          y1: \"16\",\n          x2: \"12.01\",\n          y2: \"16\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this), error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }, this), !loading && recommendations.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"empty-recommendations\",\n      children: hasRecommendations === false ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty-state\",\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          width: \"48\",\n          height: \"48\",\n          viewBox: \"0 0 24 24\",\n          fill: \"none\",\n          stroke: \"currentColor\",\n          strokeWidth: \"1\",\n          strokeLinecap: \"round\",\n          strokeLinejoin: \"round\",\n          children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"10\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n            x1: \"12\",\n            y1: \"8\",\n            x2: \"12\",\n            y2: \"12\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n            x1: \"12\",\n            y1: \"16\",\n            x2: \"12.01\",\n            y2: \"16\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Add movies to your watched list to get recommendations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty-state\",\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          width: \"48\",\n          height: \"48\",\n          viewBox: \"0 0 24 24\",\n          fill: \"none\",\n          stroke: \"currentColor\",\n          strokeWidth: \"1\",\n          strokeLinecap: \"round\",\n          strokeLinejoin: \"round\",\n          children: /*#__PURE__*/_jsxDEV(\"polygon\", {\n            points: \"12 2 15.09 8.26 22 9.27 17 14.14 18.18 21.02 12 17.77 5.82 21.02 7 14.14 2 9.27 8.91 8.26 12 2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No recommendations found for the selected genre\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"empty-state-subtitle\",\n          children: \"Try selecting a different genre or click \\\"Get Recommendations\\\" again\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }, this), recommendations.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recommendation-list\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recommendation-items\",\n        children: recommendations.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"recommendation-item\",\n          children: [movie.poster_path ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `https://image.tmdb.org/t/p/w342${movie.poster_path}`,\n            alt: movie.title,\n            className: \"recommendation-poster\",\n            loading: \"lazy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"recommendation-poster-placeholder\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              xmlns: \"http://www.w3.org/2000/svg\",\n              width: \"48\",\n              height: \"48\",\n              viewBox: \"0 0 24 24\",\n              fill: \"none\",\n              stroke: \"currentColor\",\n              strokeWidth: \"1\",\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n                x: \"2\",\n                y: \"2\",\n                width: \"20\",\n                height: \"20\",\n                rx: \"2.18\",\n                ry: \"2.18\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                x1: \"7\",\n                y1: \"2\",\n                x2: \"7\",\n                y2: \"22\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                x1: \"17\",\n                y1: \"2\",\n                x2: \"17\",\n                y2: \"22\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                x1: \"2\",\n                y1: \"12\",\n                x2: \"22\",\n                y2: \"12\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                x1: \"2\",\n                y1: \"7\",\n                x2: \"7\",\n                y2: \"7\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                x1: \"2\",\n                y1: \"17\",\n                x2: \"7\",\n                y2: \"17\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                x1: \"17\",\n                y1: \"17\",\n                x2: \"22\",\n                y2: \"17\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                x1: \"17\",\n                y1: \"7\",\n                x2: \"22\",\n                y2: \"7\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"recommendation-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"recommendation-title\",\n              children: movie.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"recommendation-details\",\n              children: [movie.release_date && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"recommendation-year\",\n                children: formatReleaseYear(movie.release_date)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 23\n              }, this), movie.vote_average > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"recommendation-rating\",\n                children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                  xmlns: \"http://www.w3.org/2000/svg\",\n                  width: \"12\",\n                  height: \"12\",\n                  viewBox: \"0 0 24 24\",\n                  fill: \"#f59e0b\",\n                  stroke: \"#f59e0b\",\n                  strokeWidth: \"1\",\n                  strokeLinecap: \"round\",\n                  strokeLinejoin: \"round\",\n                  children: /*#__PURE__*/_jsxDEV(\"polygon\", {\n                    points: \"12 2 15.09 8.26 22 9.27 17 14.14 18.18 21.02 12 17.77 5.82 21.02 7 14.14 2 9.27 8.91 8.26 12 2\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 217,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 25\n                }, this), movie.vote_average.toFixed(1)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 17\n          }, this)]\n        }, movie.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n};\n_s(Recommend, \"bZDElUNDuihir0LIauvVzAph2/Q=\");\n_c = Recommend;\nexport default Recommend;\nvar _c;\n$RefreshReg$(_c, \"Recommend\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","axios","jwtDecode","jsxDEV","_jsxDEV","Fragment","_Fragment","Recommend","_s","recommendations","setRecommendations","genres","setGenres","selectedGenre","setSelectedGenre","loading","setLoading","error","setError","apiKey","setApiKey","hasRecommendations","setHasRecommendations","token","localStorage","getItem","userId","id","fetchApiKey","response","get","data","api_key","fetchGenres","params","language","shuffleArray","array","arrayCopy","i","length","j","Math","floor","random","fetchRecommendations","user_id","filteredRecommendations","filter","rec","genre_names","includes","randomizedRecommendations","formatReleaseYear","dateString","Date","getFullYear","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","onChange","e","target","value","disabled","map","genre","name","onClick","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","cx","cy","r","points","x1","y1","x2","y2","movie","poster_path","src","alt","title","x","y","rx","ry","release_date","vote_average","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/joshu/OneDrive/Desktop/movie-recommend/client/src/components/Recommend.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport axios from 'axios';\r\nimport { jwtDecode } from 'jwt-decode';\r\n\r\nconst Recommend = () => {\r\n  const [recommendations, setRecommendations] = useState([]);\r\n  const [genres, setGenres] = useState([]);\r\n  const [selectedGenre, setSelectedGenre] = useState('All');\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [apiKey, setApiKey] = useState(null);\r\n  const [hasRecommendations, setHasRecommendations] = useState(false);\r\n  const token = localStorage.getItem('token');\r\n  const userId = token ? jwtDecode(token).id : null;\r\n\r\n  useEffect(() => {\r\n    const fetchApiKey = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/api-key');\r\n        setApiKey(response.data.api_key);\r\n      } catch (error) {\r\n        setError('Failed to fetch API key');\r\n      }\r\n    };\r\n\r\n    fetchApiKey();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!apiKey) return;\r\n\r\n    const fetchGenres = async () => {\r\n      try {\r\n        const response = await axios.get('https://api.themoviedb.org/3/genre/movie/list', {\r\n          params: {\r\n            api_key: apiKey,\r\n            language: 'en-US',\r\n          },\r\n        });\r\n        setGenres(response.data.genres);\r\n      } catch (error) {\r\n        setError('Failed to fetch genres');\r\n      }\r\n    };\r\n\r\n    fetchGenres();\r\n  }, [apiKey]);\r\n\r\n  const shuffleArray = (array) => {\r\n    const arrayCopy = [...array];\r\n    for (let i = arrayCopy.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      [arrayCopy[i], arrayCopy[j]] = [arrayCopy[j], arrayCopy[i]];\r\n    }\r\n    return arrayCopy;\r\n  };\r\n\r\n  const fetchRecommendations = useCallback(async () => {\r\n    if (!userId) {\r\n      setError('User not logged in');\r\n      return;\r\n    }\r\n\r\n    if (!apiKey) {\r\n      setError('API key not available');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const response = await axios.get('http://localhost:5000/recommendations', {\r\n        params: { user_id: userId },\r\n      });\r\n\r\n      if (response.data.length === 0) {\r\n        setHasRecommendations(false);\r\n        setRecommendations([]);\r\n        return;\r\n      }\r\n\r\n      setHasRecommendations(true);\r\n      let filteredRecommendations = response.data;\r\n\r\n      if (selectedGenre !== 'All') {\r\n        filteredRecommendations = filteredRecommendations.filter(rec =>\r\n          rec.genre_names && rec.genre_names.includes(selectedGenre)\r\n        );\r\n      }\r\n      const randomizedRecommendations = shuffleArray(filteredRecommendations);\r\n\r\n      setRecommendations(randomizedRecommendations);\r\n    } catch (error) {\r\n      setError('Error fetching recommendations');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [userId, apiKey, selectedGenre]);\r\n\r\n  // Format the release date to show only the year\r\n  const formatReleaseYear = (dateString) => {\r\n    if (!dateString) return '';\r\n    return new Date(dateString).getFullYear();\r\n  };\r\n\r\n  return (\r\n    <section className=\"recommend-container\">\r\n      <h2 className=\"section-title\">Movie Recommendations</h2>\r\n      \r\n      <div className=\"genre-selection\">\r\n        <div className=\"genre-filter\">\r\n          <label htmlFor=\"genre-select\">Filter by genre:</label>\r\n          <select \r\n            id=\"genre-select\"\r\n            onChange={(e) => setSelectedGenre(e.target.value)} \r\n            value={selectedGenre}\r\n            disabled={loading}\r\n          >\r\n            <option value=\"All\">All Genres</option>\r\n            {genres.map((genre) => (\r\n              <option key={genre.id} value={genre.name}>{genre.name}</option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <button \r\n          onClick={fetchRecommendations} \r\n          disabled={loading}\r\n          className=\"recommend-button\"\r\n        >\r\n          {loading ? (\r\n            <>\r\n              <span className=\"loading-spinner\"></span>\r\n              <span>Loading...</span>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n                <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\r\n                <polygon points=\"10 8 16 12 10 16 10 8\"></polygon>\r\n              </svg>\r\n              Get Recommendations\r\n            </>\r\n          )}\r\n        </button>\r\n      </div>\r\n\r\n      {error && (\r\n        <div className=\"error-message\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n            <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\r\n            <line x1=\"12\" y1=\"8\" x2=\"12\" y2=\"12\"></line>\r\n            <line x1=\"12\" y1=\"16\" x2=\"12.01\" y2=\"16\"></line>\r\n          </svg>\r\n          {error}\r\n        </div>\r\n      )}\r\n\r\n      {!loading && recommendations.length === 0 && (\r\n        <div className=\"empty-recommendations\">\r\n          {hasRecommendations === false ? (\r\n            <div className=\"empty-state\">\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"1\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n                <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\r\n                <line x1=\"12\" y1=\"8\" x2=\"12\" y2=\"12\"></line>\r\n                <line x1=\"12\" y1=\"16\" x2=\"12.01\" y2=\"16\"></line>\r\n              </svg>\r\n              <p>Add movies to your watched list to get recommendations</p>\r\n            </div>\r\n          ) : (\r\n            <div className=\"empty-state\">\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"1\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n                <polygon points=\"12 2 15.09 8.26 22 9.27 17 14.14 18.18 21.02 12 17.77 5.82 21.02 7 14.14 2 9.27 8.91 8.26 12 2\"></polygon>\r\n              </svg>\r\n              <p>No recommendations found for the selected genre</p>\r\n              <p className=\"empty-state-subtitle\">Try selecting a different genre or click \"Get Recommendations\" again</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {recommendations.length > 0 && (\r\n        <div className=\"recommendation-list\">\r\n          <div className=\"recommendation-items\">\r\n            {recommendations.map((movie) => (\r\n              <div key={movie.id} className=\"recommendation-item\">\r\n                {movie.poster_path ? (\r\n                  <img \r\n                    src={`https://image.tmdb.org/t/p/w342${movie.poster_path}`} \r\n                    alt={movie.title} \r\n                    className=\"recommendation-poster\" \r\n                    loading=\"lazy\"\r\n                  />\r\n                ) : (\r\n                  <div className=\"recommendation-poster-placeholder\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"1\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n                      <rect x=\"2\" y=\"2\" width=\"20\" height=\"20\" rx=\"2.18\" ry=\"2.18\"></rect>\r\n                      <line x1=\"7\" y1=\"2\" x2=\"7\" y2=\"22\"></line>\r\n                      <line x1=\"17\" y1=\"2\" x2=\"17\" y2=\"22\"></line>\r\n                      <line x1=\"2\" y1=\"12\" x2=\"22\" y2=\"12\"></line>\r\n                      <line x1=\"2\" y1=\"7\" x2=\"7\" y2=\"7\"></line>\r\n                      <line x1=\"2\" y1=\"17\" x2=\"7\" y2=\"17\"></line>\r\n                      <line x1=\"17\" y1=\"17\" x2=\"22\" y2=\"17\"></line>\r\n                      <line x1=\"17\" y1=\"7\" x2=\"22\" y2=\"7\"></line>\r\n                    </svg>\r\n                  </div>\r\n                )}\r\n                <div className=\"recommendation-content\">\r\n                  <h3 className=\"recommendation-title\">{movie.title}</h3>\r\n                  <div className=\"recommendation-details\">\r\n                    {movie.release_date && (\r\n                      <span className=\"recommendation-year\">{formatReleaseYear(movie.release_date)}</span>\r\n                    )}\r\n                    {movie.vote_average > 0 && (\r\n                      <span className=\"recommendation-rating\">\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" viewBox=\"0 0 24 24\" fill=\"#f59e0b\" stroke=\"#f59e0b\" strokeWidth=\"1\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n                          <polygon points=\"12 2 15.09 8.26 22 9.27 17 14.14 18.18 21.02 12 17.77 5.82 21.02 7 14.14 2 9.27 8.91 8.26 12 2\"></polygon>\r\n                        </svg>\r\n                        {movie.vote_average.toFixed(1)}\r\n                      </span>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Recommend;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}