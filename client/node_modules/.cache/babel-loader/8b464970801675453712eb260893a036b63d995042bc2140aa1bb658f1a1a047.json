{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joshu\\\\OneDrive\\\\Desktop\\\\movie-recommend\\\\client\\\\src\\\\components\\\\Recommend.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jwtDecode } from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Recommend = () => {\n  _s();\n  const [recommendations, setRecommendations] = useState([]);\n  const [genres, setGenres] = useState([]);\n  const [selectedGenre, setSelectedGenre] = useState('All');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [apiKey, setApiKey] = useState(null);\n  const token = localStorage.getItem('token');\n  const userId = token ? jwtDecode(token).id : null;\n  useEffect(() => {\n    const fetchApiKey = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api-key');\n        setApiKey(response.data.api_key);\n      } catch (error) {\n        console.error('Error fetching API key:', error);\n        setError('Failed to fetch API key');\n      }\n    };\n    fetchApiKey();\n  }, []);\n  useEffect(() => {\n    if (!apiKey) return;\n    const fetchGenres = async () => {\n      try {\n        const response = await axios.get('https://api.themoviedb.org/3/genre/movie/list', {\n          params: {\n            api_key: apiKey,\n            language: 'en-US'\n          }\n        });\n        setGenres(response.data.genres);\n      } catch (error) {\n        console.error('Error fetching genres:', error);\n        setError('Failed to fetch genres');\n      }\n    };\n    fetchGenres();\n  }, [apiKey]);\n  const shuffleArray = array => {\n    const arrayCopy = [...array];\n    for (let i = arrayCopy.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [arrayCopy[i], arrayCopy[j]] = [arrayCopy[j], arrayCopy[i]];\n    }\n    return arrayCopy;\n  };\n  const fetchRecommendations = async () => {\n    if (!userId) {\n      setError('User not logged in');\n      return;\n    }\n    if (!apiKey) {\n      setError('API key not available');\n      return;\n    }\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await axios.get('http://localhost:5000/recommendations', {\n        params: {\n          user_id: userId\n        }\n      });\n      let filteredRecommendations = response.data;\n      if (selectedGenre !== 'All') {\n        filteredRecommendations = filteredRecommendations.filter(rec => rec.genre_names.includes(selectedGenre));\n      }\n      const randomizedRecommendations = shuffleArray(filteredRecommendations);\n      setRecommendations(randomizedRecommendations);\n    } catch (error) {\n      setError('Error fetching recommendations');\n      console.error('Error fetching recommendations:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"recommend-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"genre-selection\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => setSelectedGenre(e.target.value),\n        value: selectedGenre,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"All\",\n          children: \"All Genres\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), genres.map(genre => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: genre.name,\n          children: genre.name\n        }, genre.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchRecommendations,\n        disabled: loading,\n        children: loading ? 'Loading...' : 'Get Recommendations'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recommendation-list\",\n      children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 19\n      }, this), !loading && recommendations.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No recommendations available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 54\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recommendation-items\",\n        children: recommendations.map((movie, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"recommendation-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: `https://image.tmdb.org/t/p/w200${movie.poster_path}`,\n            alt: movie.title,\n            className: \"recommendation-poster\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"recommendation-title\",\n            children: movie.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_s(Recommend, \"TWBKnD+/Zt2/VbE/1tYediGWVCA=\");\n_c = Recommend;\nexport default Recommend;\nvar _c;\n$RefreshReg$(_c, \"Recommend\");","map":{"version":3,"names":["React","useState","useEffect","axios","jwtDecode","jsxDEV","_jsxDEV","Recommend","_s","recommendations","setRecommendations","genres","setGenres","selectedGenre","setSelectedGenre","loading","setLoading","error","setError","apiKey","setApiKey","token","localStorage","getItem","userId","id","fetchApiKey","response","get","data","api_key","console","fetchGenres","params","language","shuffleArray","array","arrayCopy","i","length","j","Math","floor","random","fetchRecommendations","user_id","filteredRecommendations","filter","rec","genre_names","includes","randomizedRecommendations","className","children","onChange","e","target","value","fileName","_jsxFileName","lineNumber","columnNumber","map","genre","name","onClick","disabled","movie","index","src","poster_path","alt","title","_c","$RefreshReg$"],"sources":["C:/Users/joshu/OneDrive/Desktop/movie-recommend/client/src/components/Recommend.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { jwtDecode } from 'jwt-decode';\r\n\r\nconst Recommend = () => {\r\n  const [recommendations, setRecommendations] = useState([]);\r\n  const [genres, setGenres] = useState([]);\r\n  const [selectedGenre, setSelectedGenre] = useState('All');\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [apiKey, setApiKey] = useState(null);\r\n  const token = localStorage.getItem('token');\r\n  const userId = token ? jwtDecode(token).id : null;\r\n\r\n  useEffect(() => {\r\n    const fetchApiKey = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/api-key');\r\n        setApiKey(response.data.api_key);\r\n      } catch (error) {\r\n        console.error('Error fetching API key:', error);\r\n        setError('Failed to fetch API key');\r\n      }\r\n    };\r\n\r\n    fetchApiKey();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!apiKey) return;\r\n\r\n    const fetchGenres = async () => {\r\n      try {\r\n        const response = await axios.get('https://api.themoviedb.org/3/genre/movie/list', {\r\n          params: {\r\n            api_key: apiKey,\r\n            language: 'en-US',\r\n          },\r\n        });\r\n        setGenres(response.data.genres);\r\n      } catch (error) {\r\n        console.error('Error fetching genres:', error);\r\n        setError('Failed to fetch genres');\r\n      }\r\n    };\r\n\r\n    fetchGenres();\r\n  }, [apiKey]);\r\n\r\n  const shuffleArray = (array) => {\r\n    const arrayCopy = [...array];\r\n    for (let i = arrayCopy.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      [arrayCopy[i], arrayCopy[j]] = [arrayCopy[j], arrayCopy[i]];\r\n    }\r\n    return arrayCopy;\r\n  };\r\n\r\n  const fetchRecommendations = async () => {\r\n    if (!userId) {\r\n      setError('User not logged in');\r\n      return;\r\n    }\r\n\r\n    if (!apiKey) {\r\n      setError('API key not available');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const response = await axios.get('http://localhost:5000/recommendations', {\r\n        params: { user_id: userId },\r\n      });\r\n\r\n      let filteredRecommendations = response.data;\r\n\r\n      if (selectedGenre !== 'All') {\r\n        filteredRecommendations = filteredRecommendations.filter(rec =>\r\n          rec.genre_names.includes(selectedGenre)\r\n        );\r\n      }\r\n      const randomizedRecommendations = shuffleArray(filteredRecommendations);\r\n\r\n      setRecommendations(randomizedRecommendations);\r\n    } catch (error) {\r\n      setError('Error fetching recommendations');\r\n      console.error('Error fetching recommendations:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"recommend-container\">\r\n      <div className=\"genre-selection\">\r\n        <select onChange={(e) => setSelectedGenre(e.target.value)} value={selectedGenre}>\r\n          <option value=\"All\">All Genres</option>\r\n          {genres.map((genre) => (\r\n            <option key={genre.id} value={genre.name}>{genre.name}</option>\r\n          ))}\r\n        </select>\r\n        <button onClick={fetchRecommendations} disabled={loading}>\r\n          {loading ? 'Loading...' : 'Get Recommendations'}\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"recommendation-list\">\r\n        {error && <p className=\"error-message\">{error}</p>}\r\n        {!loading && recommendations.length === 0 && <p>No recommendations available</p>}\r\n        <div className=\"recommendation-items\">\r\n          {recommendations.map((movie, index) => (\r\n            <div key={index} className=\"recommendation-item\">\r\n              <img \r\n                src={`https://image.tmdb.org/t/p/w200${movie.poster_path}`} \r\n                alt={movie.title} \r\n                className=\"recommendation-poster\" \r\n              />\r\n              <span className=\"recommendation-title\">{movie.title}</span>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Recommend;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}